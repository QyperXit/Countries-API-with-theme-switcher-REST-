(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const c of n)if(c.type==="childList")for(const s of c.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&r(s)}).observe(document,{childList:!0,subtree:!0});function t(n){const c={};return n.integrity&&(c.integrity=n.integrity),n.referrerPolicy&&(c.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?c.credentials="include":n.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function r(n){if(n.ep)return;n.ep=!0;const c=t(n);fetch(n.href,c)}})();function g(){const e=document.body,o=document.querySelector(".darkMode");document.querySelector(".fa-moon"),o.addEventListener("click",()=>{const t=e.classList.toggle("dark-mode");localStorage.setItem("darkMode",t),f(t)})}function f(e){const o=new CustomEvent("darkModeChanged",{detail:{isDarkModeEnabled:e}});window.dispatchEvent(o)}console.log("hello");document.addEventListener("DOMContentLoaded",function(){document.querySelector(".card-grid").addEventListener("click",function(o){const t=o.target.closest(".card");if(t){const r=t.querySelector(".nation h1").textContent;localStorage.setItem("selectedCountry",r),window.location.href="/Countries-API-with-theme-switcher-REST-/cards.html"}})});fetch("https://restcountries.com/v3.1/all").then(e=>e.json()).then(e=>{localStorage.setItem("allCountries",JSON.stringify(e))});document.addEventListener("DOMContentLoaded",function(){const e=localStorage.getItem("selectedCountry");if(e){const o=JSON.parse(localStorage.getItem("allCountries")),t=o.find(r=>r.name.common===e);t?p(t,o):console.error(`Country data not found for: ${e}`)}});function p(e,o){const t=document.querySelector(".description_IMG");e.flags&&(t.src=e.flags.svg||e.flags.png||"",t.alt=e.flags.alt||""),document.querySelector(".nation_name").innerHTML=`${e.name.common}`;const r=e.name.nativeName,n=Object.keys(r)[0],c=r[n].common;document.querySelector(".nativeName").innerHTML=`<strong>Native Name:</strong> ${c}`,document.querySelector(".population").innerHTML=`<strong>Population:</strong> ${new Intl.NumberFormat().format(e.population)}`,document.querySelector(".region").innerHTML=`<strong>Region:</strong> ${e.region}`,document.querySelector(".subRegion").innerHTML=`<strong>Sub Region:</strong> ${e.subregion}`,document.querySelector(".capital").innerHTML=`<strong>Capital:</strong> ${e.capital}`,document.querySelector(".topLevelDomain").innerHTML=`<strong>Top Level Domain:</strong> ${e.cca2}`;for(const d in e.currencies){const i=e.currencies[d];document.querySelector(".currencies").innerHTML=`<strong>Currencies:</strong> ${i.name}`}document.querySelector(".languages").innerHTML=`<strong>Languages:</strong> ${Object.values(e.languages).join(", ")}`;const s=document.querySelector(".country-border div");s.innerHTML="";let l=0;e.borders.forEach(d=>{if(l<3){const i=document.createElement("button");console.log(d);const a=o.find(m=>m.cca3===d);i.textContent=a?a.name.common:d,i.addEventListener("click",()=>{L(d,o)}),s.appendChild(i),l++}else return})}function L(e,o){console.log("All country codes:",o.map(r=>r.cca2));const t=o.find(r=>r.cca3===e);console.log("Border country:",t),t?(localStorage.setItem("selectedCountry",t.name.common),window.location.href="/Countries-API-with-theme-switcher-REST-/cards.html"):console.error(`Border country data not found for: ${e}`)}document.addEventListener("DOMContentLoaded",()=>{g()});document.addEventListener("DOMContentLoaded",function(){const e=document.body,o=document.querySelector(".darkMode"),t=localStorage.getItem("darkMode")==="true";e.classList.toggle("dark-mode",t),u(t),o.addEventListener("click",function(){e.classList.toggle("dark-mode"),localStorage.setItem("darkMode",e.classList.contains("dark-mode")),u(e.classList.contains("dark-mode"))})});function u(e){const o=document.querySelector(".fa-moon");e?o.classList.replace("fa-regular","fa-solid"):o.classList.replace("fa-solid","fa-regular")}export{g as t};
